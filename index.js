import{a as g}from"./assets/vendor-upsvKRUO.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const d of n.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&o(d)}).observe(document,{childList:!0,subtree:!0});function a(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(e){if(e.ep)return;e.ep=!0;const n=a(e);fetch(e.href,n)}})();const m="48211039-b5a5e94b0d08467a34362de56",h="https://pixabay.com/api/";async function u(r,t=1){const a={key:m,q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:t};try{return(await g.get(h,{params:a})).data}catch(o){throw console.error("Error fetching images:",o),new Error("Failed to fetch images. Please try again later.")}}function f(r){const t=document.querySelector("#gallery"),a=r.map(o=>`
      <a href="${o.largeImageURL}" class="gallery-item">
        <img src="${o.webformatURL}" alt="${o.tags}" />
        <div class="info">
          <span><strong>Likes:</strong> ${o.likes}</span>
          <span><strong>Views:</strong> ${o.views}</span>
          <span><strong>Comments:</strong> ${o.comments}</span>
          <span><strong>Downloads:</strong> ${o.downloads}</span>
        </div>
      </a>
    `).join("");t.insertAdjacentHTML("beforeend",a),new SimpleLightbox(".gallery-item",{captionsData:"alt",captionDelay:250})}function y(){document.querySelector("#gallery").innerHTML=""}function s(r){document.querySelector("#loader").classList.toggle("hidden",!r)}let c="",i=1;const p=document.querySelector("#search-form"),L=document.querySelector("#search-input"),l=document.querySelector("#load-more"),w=document.querySelector("#gallery");p.addEventListener("submit",async r=>{if(r.preventDefault(),c=L.value.trim(),!c){alert("Please enter a search term.");return}y(),i=1,l.classList.add("hidden"),s(!0);try{const t=await u(c,i);if(s(!1),t.hits.length===0){alert("No images found. Try another query.");return}f(t.hits),l.classList.remove("hidden")}catch(t){console.error("Error fetching images:",t),s(!1),alert("Something went wrong. Please try again.")}});l.addEventListener("click",async()=>{i+=1,s(!0);try{const r=await u(c,i);s(!1),f(r.hits);const t=w.firstElementChild.getBoundingClientRect().height;window.scrollBy({top:t*2,behavior:"smooth"}),i*15>=r.totalHits&&(l.classList.add("hidden"),alert("We're sorry, but you've reached the end of search results."))}catch(r){console.error("Error loading more images:",r),s(!1),alert("Something went wrong. Please try again.")}});
//# sourceMappingURL=index.js.map
